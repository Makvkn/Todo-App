{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","TodoList","props","listStyle","margin","map","index","onToggle","AddTodo","onCreate","useState","value","setValue","onSubmit","event","preventDefault","trim","localStorage","setItem","JSON","stringify","target","App","todos","setTodos","Provider","filter","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKAIeA,EAFCC,IAAMC,gB,OCEhBC,EAAS,CACXC,GAAI,CACAC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,uBACTC,OAAQ,iBACRC,aAAc,MACdC,aAAc,SAElBC,MAAO,CACHC,YAAa,SAsCNC,MA/Bf,YAAqC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,SAEdC,EAAcC,qBAAWlB,GAAzBiB,WAELE,EAAQ,GAOV,OANAJ,EAAKK,WACLD,EAAQE,KAAK,QAQT,qBAAIC,MAAOnB,EAAOC,GAAlB,UACI,uBAAMmB,UAAWJ,EAAQK,KAAK,KAA9B,UACI,uBAAOC,KAAK,WACLH,MAAOnB,EAAOS,MACdc,QAASX,EAAKK,UACdJ,SAAU,kBAAMA,EAASD,EAAKY,OAEpCZ,EAAKa,SAEV,wBAAQL,UAAU,KAAKM,QAAS,kBAAMZ,EAAWF,EAAKY,KAAtD,SACI,2CCnBDG,MAzBf,SAAkBC,GAYd,OACI,oBAAIT,MAVA,CACAU,UAAW,OACXC,OAAQ,EACRzB,QAAS,GAOb,SACKuB,EAAMhB,KAAKmB,KAAI,SAACnB,EAAMoB,GACnB,OAAO,cAAC,EAAD,CAAUpB,KAAMA,EAENoB,MAAOA,EACPnB,SAAUe,EAAMK,UAFXrB,EAAKY,UCU5BU,MAvBf,YAA8B,IAAZC,EAAW,EAAXA,SAEd,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAYI,OACI,uBAAMnB,MAAO,CAACX,aAAc,QAAS+B,SAX7C,SAAuBC,GACnBA,EAAMC,iBACHJ,EAAMK,SACLP,EAASE,GACTC,EAAS,IACTK,aAAaC,QAAQ,QAASC,KAAKC,UAAUT,MAMiBjB,UAAU,aAAxE,UACI,uBAAOiB,MAAOA,EAAOxB,SAAU,SAAA2B,GAAK,OAAIF,EAASE,EAAMO,OAAOV,UAC9D,wBAASf,KAAK,SAAd,qBCkCD0B,MAnDf,WAEI,MAA0BlD,IAAMsC,SAAW,IAA3C,mBAAOa,EAAP,KAAcC,EAAd,KAkCA,OACI,cAAC,EAAQC,SAAT,CAAkBd,MAAO,CAACvB,WApBlC,SAAoBU,GACZ0B,EACID,EAAMG,QAAO,SAAAxC,GAAI,OAAIA,EAAKY,KAAOA,QAkBrC,SACA,sBAAKJ,UAAU,UAAf,UACA,gDAGI,cAAC,EAAD,CAASe,SAnBrB,SAAiBV,GACTyB,EACID,EAAMI,OAAO,CACT,CACI5B,QACAD,GAAI8B,KAAKC,MACTtC,WAAW,SAclBgC,EAAMO,OAAS,cAAC,EAAD,CAAU5C,KAAMqC,EAAOhB,SArCnD,SAAoBT,GAChB0B,EACID,EAAMlB,KAAI,SAAAnB,GAIN,OAHIA,EAAKY,KAAOA,IACZZ,EAAKK,WAAaL,EAAKK,WAEpBL,SA+B0D,6DCpC9D6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.795ec4bd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import Context from \"../context\";\r\nimport {useContext} from \"react\";\r\nimport React from \"react\";\r\n\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '.0rem 0rem 0rem 1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n        marginBottom: '.5rem'\r\n    },\r\n    input: {\r\n        marginRight: '1rem'\r\n    },\r\n\r\n\r\n}\r\n\r\n\r\nfunction TodoItem({todo, onChange}) {\r\n\r\n    const {removeTodo} = useContext(Context)\r\n\r\nconst classes=[];\r\nif (todo.completed) {\r\n    classes.push('done')\r\n}\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <li style={styles.li}>\r\n            <span className={classes.join(' ')}>\r\n                <input type=\"checkbox\"\r\n                       style={styles.input}\r\n                       checked={todo.completed}\r\n                       onChange={() => onChange(todo.id)}\r\n                />\r\n                {todo.title}\r\n            </span>\r\n            <button className='rm' onClick={() => removeTodo(todo.id)}>\r\n                <b>&times;</b>\r\n            </button>\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoItem;","import TodoItem from \"./TodoItem\";\r\n\r\nfunction TodoList(props) {\r\n\r\n    const styles = {\r\n        ul: {\r\n            listStyle: 'none',\r\n            margin: 0,\r\n            padding: 0\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {props.todo.map((todo, index) => {\r\n                return <TodoItem todo={todo}\r\n                                 key={todo.id}\r\n                                 index={index}\r\n                                 onChange={props.onToggle}\r\n                />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, {useState} from \"react\";\r\n\r\n\r\n\r\n\r\nfunction AddTodo({onCreate}) {\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault()\r\n        if(value.trim()) {\r\n            onCreate(value)\r\n            setValue('')\r\n            localStorage.setItem('posts', JSON.stringify(value) )\r\n        }\r\n\r\n    }\r\n\r\n        return (\r\n            <form style={{marginBottom: '1rem'}} onSubmit={submitHandler} className='inputField'>\r\n                <input value={value} onChange={event => setValue(event.target.value)}/>\r\n                <button  type=\"submit\">Add</button>\r\n            </form>\r\n            \r\n        )\r\n}\r\n\r\nexport default AddTodo;\r\n\r\n\r\n","import React from 'react'\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport AddTodo from \"./Todo/AddTodo\";\n\nfunction App() {\n\n    const [todos, setTodos] = React.useState ( [\n\n\n    ])\nfunction toggleTodo(id) {\n    setTodos (\n        todos.map(todo => {\n            if (todo.id === id) {\n                todo.completed = !todo.completed\n            }\n            return todo\n        })\n    )\n}\n\nfunction removeTodo(id) {\n        setTodos(\n            todos.filter(todo => todo.id !== id)\n        )\n}\n\nfunction addTodo(title) {\n        setTodos(\n            todos.concat([\n                {\n                    title,\n                    id: Date.now(),\n                    completed: false\n                }\n            ])\n        )\n\n}\n\n    return (\n        <Context.Provider value={{removeTodo}}>\n        <div className='wrapper'>\n        <header>\n            Todo React\n        </header>\n            <AddTodo onCreate={addTodo}/>\n            {todos.length ? <TodoList todo={todos} onToggle={toggleTodo}/> : <p>No todos. Write please</p>}\n\n        </div>\n        </Context.Provider>\n    )\n\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}